Здравствуйте!

Данные от админ панели:
Логин: admin
Пароль: admin

Название БД: new_book_catalog.sql



Жду вашего ответа.
**************************************************************************************************************************************

ver. 2.0
После вашего ответа: 
"Что исправить:
1. В БД должно быть 5 таблиц, в таблице book не должно быть полей author & genre :
Нормализация - это избавление таблиц в БД от избыточных данных.
Избыточные данные - это повторяющиеся данные - если посмотрите свою БД таблицу то увидите много таких примеров, когда
одна книга принадлежит нескольким авторам и жанрам.
Чтобы избавиться от избыточности, нужно сделать 5 таблиц вместо 3-ёх. 
В БД должны быть 3 основные таблицы (book, autors, genre), 
а также еще 2 таблицы для реализации отношения многие ко многим (книга->авторы и книга->жанры)."

Я внес правки в таблицы выполнив сказанное выше, а так же доработал поиск, теперь от коректно работает.



**************************************************************************************************************************************
03.03.2020
Получили ответ по Вашей работе. Что исправить:

Просмотреть фалы типа index.php и перенести весь php код в верх скрипта (например с 24 строки по 73 перенести в 10ю ),что бы отделить php от html. 
При этом циклы и условия с распечатками можно не трогать. 

Ждем Вашу работу)



Я внес правки в таблицы выполнив сказанное выше, а так же доработал списки жанров и авторов, теперь данные таблицы автоматически удаляют данные которые не привязанны ни к одной книги (полагаю такой формат более корректен ).




Жду вашего ответа.

**************************************************************************************************************************************
23.07.2020
Я полностью переписал работу оставив не изменым только интерфейс сайта

Старался по возможности реализовать с применением ООП

на index.php у пользователя есть возможность: просматривать всю библиотеку, делать выборку по жанру/автору, делать поиск по всему сайту, заходить на страницу с книгой и на ней делать заказ
для данного функционала были разработанны и применены следующие классы: (подключение данных классов осуществляется в файле index_all_classes.php)

BookInfo // просмотр информации по книге (унаследован от класса PublishRefain, применен полиморфизм для метода view())
QueryBuilder // Класс для построения PDO запросов
Validate // Класс для валидации
Email // Класс для отправки письма
Search // Класс для поиска по сайту (применял инкапсуляцию в классе, что бы у пользователя была возможность только задавать искомое значение)

Refain в данном разделе построен таким образом что бы пользователь не имел возможности выбора автора/жанра в случае если за ним НЕ закрепленена ни одна книга


в разделе админа права и возможности расширяются: просматривать всю библиотеку, делать выборку по жанру/автору, делать поиск по всему сайту, заходить на страницу с книгой, добавление-удаление автора/жанра, контроль status автора/жанра, добавление и редактирование данных по книге
для данного функционала были разработанны и применены следующие классы: (подключение данных классов осуществляется в файле all_classes.php)

BookInfo // просмотр информации по книге (унаследован от класса PublishRefain, применен полиморфизм для метода view())
Email // Класс для отправки письма
PublishRefain.php // применял инкапсуляцию в классе в методе checkerRefain() - который служит исключительно для контроля статусов у жанров/авторов
QueryBuilder // Класс для построения PDO запросов
Search // Класс для поиска по сайту (применял инкапсуляцию в классе, что бы у пользователя была возможность только задавать искомое значение)
Validate // Класс для валидации

при добавлении книги происходит проверка существования автора/жанра, если он есть - береться его ИД, если нет добавляется новый
в случае если за автором/жанром не закрепленена ни одна книга - его цвет становится серым и появляется возможность удаления


Надеюсь в работе прослеживается, что за этот период я улучшил свои знания, спасибо за внимание.


